name: Symptum Editor Windows Packaging

on:
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]
  workflow_dispatch:

jobs:

  build:
    runs-on: windows-latest
    env:
      Project_Path: main/src/Symptum.Editor/Symptum.Editor/
      Project_File: main/src/Symptum.Editor/Symptum.Editor.csproj
      Project_Cert: Symptum.Editor_TemporaryKey.pfx

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: main
    - name: Checkout Symptum.Data
      uses: actions/checkout@v4
      with:
        repository: symptum/Symptum.Data
        path: Symptum.Data
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    # Decode the base 64 encoded pfx and save the Signing_Certificate
    - name: Decode the pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.BASE64_ENCODED_PFX }}")
        $currentDir = Get-Location
        $certificatePath = Join-Path -Path $currentDir -ChildPath $env.Project_Path -AdditionalChildPath $env.Project_Cert
        Write-Output $certificatePath
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Project_File /r /t:Restore /p:Configuration=Release

    # Create the app package by building and packaging the project
    - name: Create the app package
      run: msbuild $env:Project_File /p:TargetFramework=net9.0-windows10.0.22621 /p:Configuration=Release /p:Platform=x64 /p:PublishSignedPackage=true /p:PackageCertificateKeyFile=$env:Project_Cert /p:AppxPackageDir="Packages\\"

    # Remove the pfx
    - name: Remove the pfx
      run: Remove-Item -path $env:Project_Path\$env:Project_Cert

    # Upload the MSIX package: https://github.com/marketplace/actions/upload-a-build-artifact
    - name: Upload MSIX package
      uses: actions/upload-artifact@v4.6.2
      with:
        name: MSIX Package
        path: ${{ env.Project_Path }}\\Packages\\
